on:
  push:
    branches:
      - master

name: Release

env:
  SEMVERBOT_VERSION: "1.3.1"

jobs:
  test:
    uses: ./.github/workflows/test.yml
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - test
    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
    steps:
      - uses: actions/checkout@v3
      - name: Install semverbot
        run: |
          mkdir bin
          echo "$(pwd)/bin" >> $GITHUB_PATH
          curl -o bin/sbot -L https://github.com/restechnica/semverbot/releases/download/v${SEMVERBOT_VERSION}/sbot-linux-amd64
          chmod +x bin/sbot
      - name: Update version
        run: |
          sbot update version
          current_version="$(sbot get version)"
          release_version="$(sbot predict version)"
          echo "CURRENT_VERSION=${current_version}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${release_version}" >> $GITHUB_ENV
          echo "Current version: ${current_version}"
          echo "Next version: ${release_version}"
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}
      - name: Release build
        run: |
          cargo install cargo-edit
          cargo set-version ${RELEASE_VERSION}
          cargo build --release
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ env.PROJECT_NAME }}
#          path: target/release/${{ env.PROJECT_NAME }}
      - name: Release version
        run: |
          sbot release version
          sbot push version